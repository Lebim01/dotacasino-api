{
  "name": "dotacasino-api",
  "private": true,
  "workspaces": [
    "apps/*",
    "libs/*"
  ],
  "scripts": {
    "// ===== Entorno Docker =====": "",
    "stack:up": "docker compose up -d db jaeger",
    "stack:down": "docker compose down",
    "stack:reset": "docker compose down -v && docker compose up -d db jaeger",
    "stack:ps": "docker compose ps",
    "stack:logs": "docker compose logs -f",
    "// ===== Toolbox (contenedor utilitario) =====": "",
    "tool:sh": "docker compose run --rm toolbox bash",
    "tool:node": "docker compose run --rm toolbox node -v",
    "// ===== Base de datos / Redis =====": "",
    "db:psql": "docker compose exec db psql -U postgres -d casino",
    "db:ping": "docker compose exec db pg_isready -U postgres -d casino",
    "db:reset": "docker compose exec -u postgres db psql -U postgres -d postgres -c \"DROP DATABASE IF EXISTS casino; CREATE DATABASE casino;\" && yarn prisma:deploy",
    "redis:cli": "docker compose exec redis redis-cli",
    "redis:ping": "docker compose exec redis redis-cli ping",
    "// ===== Prisma (vía toolbox) =====": "",
    "prisma:gen": "docker compose run --rm toolbox bash -lc \"yarn prisma generate --schema=libs/db/schema.prisma\"",
    "prisma:dev": "docker compose run --rm toolbox bash -lc \"yarn prisma migrate dev --schema=libs/db/schema.prisma\"",
    "prisma:deploy": "docker compose run --rm toolbox bash -lc \"yarn prisma migrate deploy --schema=libs/db/schema.prisma\"",
    "prisma:studio": "docker compose run --rm --service-ports toolbox bash -lc \"yarn prisma studio --schema=libs/db/schema.prisma --browser none\"",
    "migrate:deploy": "prisma migrate deploy --schema libs/db/schema.prisma",
    "// ===== Apps (Nest) en local =====": "",
    "dev:client": "nest start client-api --watch",
    "dev:admin": "nest start admin-api --watch",
    "dev:workers": "nest start workers --watch",
    "dev:all": "concurrently -n client,admin,workers -c blue,green,magenta \"yarn dev:client\" \"yarn dev:admin\" \"yarn dev:workers\"",
    "// ===== Arranque rápido todo-en-uno =====": "",
    "up": "yarn stack:up && yarn prisma:gen && yarn prisma:deploy && yarn dev:all",
    "// ===== Seeds =====": "",
    "seed:games": "docker compose run --rm toolbox bash -lc \"npx --loader ts-node/esm libs/scripts/seed.games.ts || npx ts-node libs/scripts/seed.games.ts\"",
    "// ===== Push Cloud Run =====": "",
    "push:client-api": "docker build --platform linux/amd64 -t us-central1-docker.pkg.dev/dota-dd5dd/casino/client-api:latest --build-arg APP=client-api . && docker push us-central1-docker.pkg.dev/dota-dd5dd/casino/client-api:latest && gcloud beta run deploy client-api --image us-central1-docker.pkg.dev/dota-dd5dd/casino/client-api:latest --region us-central1 --project dota-dd5dd"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.0",
    "@types/cookie-parser": "^1.4.9",
    "@types/crypto-js": "^4.2.2",
    "@types/passport-jwt": "^4.0.1",
    "concurrently": "^9.0.0",
    "eslint": "^9.34.0",
    "prettier": "^3.6.2",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/common": "^11.0.0",
    "@nestjs/config": "^4.0.0",
    "@nestjs/core": "^11.0.0",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/schedule": "^4.0.0",
    "@opentelemetry/api": "^1.8.0",
    "@prisma/client": "^6.15.0",
    "argon2": "^0.44.0",
    "axios": "^1.11.0",
    "bullmq": "^5.7.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "crypto-js": "^4.2.0",
    "eslint-plugin-prettier": "^5.5.4",
    "fast-xml-parser": "^5.2.5",
    "ioredis": "^5.4.1",
    "nanoid": "^5.1.5",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.12.0",
    "pino": "^9.0.0",
    "pino-pretty": "^11.0.0",
    "prisma": "^6.15.0",
    "reflect-metadata": "^0.2.2",
    "typescript-eslint": "^8.41.0",
    "zod": "^4.1.4"
  }
}
